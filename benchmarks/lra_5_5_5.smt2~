(set-logic QF_LIA)
(set-info :ran_lra/lra_5_5_5.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(declare-fun b2 () Bool)
(declare-fun b3 () Bool)
(declare-fun b4 () Bool)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(define-fun ie0 () Bool (<= (+ (* (- 87) x2) (* (- 8) x0) (* 39 x2) (* 55 x3) ) 24))
(define-fun ie1 () Bool (<= (+ (* (- 97) x1) (* 86 x1) ) (- 66)))
(define-fun ie2 () Bool (<= (+ (* (- 82) x4) (* 96 x2) (* (- 85) x0) ) (- 58)))
(define-fun ie3 () Bool (<= (+ (* 76 x4) (* (- 69) x3) (* (- 98) x0) (* 10 x0) ) 55))
(define-fun ie4 () Bool (<= (+ (* 37 x4) (* (- 58) x4) (* (- 96) x2) (* 82 x2) ) 45))
(assert (or (not ie4) b1))
(assert (or ie1 b1 ie1 b2 ie3))
(assert (or (not b0) (not b2)))
(assert (or ie1 ie0 ie4 (not ie4) b0))
(assert (or (not ie3) ie3))
(assert (or ie4 ie1))
(assert (or ie3 (not b2) ie0 ie0 (not b0)))
(assert (or b0 (not ie3)))
(assert (or b0 (not b0) ie3))
(assert (or ie3 (not b0)))
(assert (or (not ie4) (not ie0) (not b2) (not b2) (not b3)))
(assert (or (not ie0) (not b3) (not ie1) (not ie3) (not b1)))
(assert (or (not ie3) (not ie3) b0 (not ie0) (not b2)))
(assert (or ie2 (not b1) ie0 ie4))
(assert (or (not ie2) b0 ie2))
(assert (or (not ie1) (not ie1) (not ie0) b3))
(assert (or b4 (not b1) b1 ie0))
(assert (or (not b1) ie4))
(assert (or (not ie2) b1 (not b4) b3 (not ie1)))
(assert (or b2 ie1 (not b0) b2 (not ie2)))
(assert (or ie2 ie2))
(assert (or (not ie4) b4 ie0 b1))
(assert (or (not b2) b2))
(assert (or (not ie3) b3))
(assert (or b4 b0))
(assert (or b0 ie4 b1 ie3 b4))
(assert (or b1 (not ie0) (not b4) (not ie2)))
(assert (or b2 (not b0)))
(assert (or (not b0) ie1 ie0 ie0))
(assert (or (not b3) ie2 (not ie1) (not ie3) b4))
(assert (or b2 (not ie0) (not b3) (not b4) ie1))
(assert (or ie1 b4))
(assert (or (not b4) b3 (not ie2)))
(assert (or (not b3) ie1 (not ie3) (not b2) b3))
(assert (or ie1 ie0 ie2 (not b2) (not ie3)))
(assert (or (not ie4) ie2 (not b3) b2))
(assert (or (not ie0) b2))
(assert (or (not ie0) b3))
(assert (or (not ie0) ie1 (not ie2) (not b4)))
(assert (or b4 ie0 (not ie1) ie1 (not b4)))
(check-sat)
(exit)
