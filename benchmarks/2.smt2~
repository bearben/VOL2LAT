(set-logic QF_LIA)
;4249)
;time-consuming:0.41
; 
(set-info :status unsat)
(declare-fun symbol_0 () Int)
(declare-fun symbol_3 () Int)
(declare-fun symbol_2 () Int)
(declare-fun symbol_4 () Int)
(declare-fun symbol_5 () Int)
(declare-fun symbol_7 () Int)
(declare-fun symbol_6 () Int)
(declare-fun symbol_9 () Int)
(declare-fun symbol_8 () Int)
(declare-fun symbol_11 () Int)
(declare-fun symbol_10 () Int)
(declare-fun symbol_13 () Int)
(declare-fun symbol_12 () Int)
(declare-fun symbol_14 () Int)
(declare-fun symbol_15 () Int)
(declare-fun symbol_16 () Int)
(declare-fun symbol_17 () Int)
(declare-fun symbol_18 () Int)
(declare-fun symbol_19 () Int)
(declare-fun symbol_20 () Int)
(declare-fun symbol_21 () Int)
(declare-fun symbol_22 () Int)
(declare-fun symbol_23 () Int)
(assert
 (not (> (- symbol_2 symbol_4) 0)))
(assert
 (not (< (- symbol_2 symbol_5) 0)))
(assert
 (not (<= (- symbol_6 symbol_7) 0)))
(assert
 (<= (- symbol_8 symbol_9) 0))
(assert
 (not (<= (- symbol_10 symbol_11) 0)))
(assert
 (not (> (- symbol_12 symbol_14) 0)))
(assert
 (not (< (- symbol_12 symbol_13) 0)))
(assert
 (not (<= (- symbol_14 symbol_12) 0)))
(assert
 (<= (- symbol_13 symbol_12) 0))
(assert
 (not (> (- symbol_12 symbol_19) 0)))
(assert
 (<= (- symbol_19 symbol_20) 0))
(assert
 (not (> (- symbol_19 symbol_21) 0)))
(assert
 (not (> (- symbol_19 symbol_22) 0)))
(assert
 (not (<= (- symbol_19 symbol_23) 0)))
(assert
 (not (= 5 (- symbol_0 1))))
(assert
 (not (<= (- symbol_14 symbol_13) 0)))
(assert
 (not (>= 3 (- symbol_0 2))))
(assert
 (not (= (- symbol_0 3) 1)))
(assert
 (not (= 3 symbol_0)))
(assert
 (<= (- symbol_15 symbol_14) 0))
(assert
 (not (= 3 (- symbol_0 1))))
(assert
 (not (<= (- symbol_16 symbol_15) 0)))
(assert
 (not (= 2 (- symbol_0 1))))
(assert
 (not (<= (- symbol_17 symbol_16) 0)))
(assert
 (not (>= 0 (- symbol_0 2))))
(assert
 (not (= (- symbol_0 0) 1)))
(assert
 (not (> (- 64 symbol_18) 6)))
(assert
 (not (< symbol_0 64)))
(assert
 (not (<= symbol_0 1)))
(check-sat)
